{
  "input":{
    "uri":"specs/example.spec",
    "position":{"line":11,"character":13},
    "newName":"* Vowels in English language are \"aeiou\" \"something\"",
    "spec":{
      "restoreFrom":"specs/example.txt",
      "toBeRestored":"specs/example.spec"
    },
    "code":{
      "restoreFrom":"tests/step_implementation.txt",
      "toBeRestored":"tests/step_implementation.js"
    }
  },
  "result":
  {
    "changes":
    {
      "specs/example.spec":[
        {"range":{"start":{"line":0,"character":0},"end":{"line":36,"character":0}},
        "newText":"Specification Heading\n=====================\n\nThis is an executable specification file. This file follows markdown syntax.\nEvery heading in this file denotes a scenario. Every bulleted point denotes a step.\n\nTo execute this specification, run\n\n    gauge specs\n\n\n* Vowels in English language are \"aeiou\" \"something\"\n\nVowel counts in single word\n---------------------------\n\ntags: single word\n\n* The word \"gauge\" has \"3\" vowels.\n\nVowel counts in multiple word\n-----------------------------\n\nThis is the second scenario in this specification\n\nHere's a step that takes a table\n\n* Almost all words have vowels \n\n   |Word  |Vowel Count|\n   |------|-----------|\n   |Gauge |3          |\n   |Mingle|2          |\n   |Snap  |1          |\n   |GoCD  |1          |\n   |Rhythm|0          |\n"
        }],
      "tests/step_implementation.js":[
        {"range":{"start":{"line":0,"character":0},"end":{"line":41,"character":0}},
        "newText":"'use strict';\nvar assert = require('assert');\nvar vowels = [\n    'a',\n    'e',\n    'i',\n    'o',\n    'u'\n];\nvar numberOfVowels = function (word) {\n    var vowelArr = word.split('').filter(function (elem) {\n        return vowels.indexOf(elem) \u003e -1;\n    });\n    return vowelArr.length;\n};\nstep('Vowels in English language are \u003cvowels\u003e \u003csomething\u003e', function (vowelsGiven, argSomething) {\n    assert.equal(vowelsGiven, vowels.join(''));\n});\nstep('The word \u003cword\u003e has \u003cnumber\u003e vowels.', function (word, number) {\n    assert.equal(number, numberOfVowels(word));\n});\nstep('Almost all words have vowels \u003ctable\u003e', function (table) {\n    table.rows.forEach(function (row) {\n        assert.equal(numberOfVowels(row.cells[0]), parseInt(row.cells[1]));\n    });\n});\nstep('Zero references \u003ctable\u003e', function (table) {\n    table.rows.forEach(function (row) {\n        assert.equal(numberOfVowels(row.cells[0]), parseInt(row.cells[1]));\n    });\n});\nbeforeScenario(function () {\n    assert.equal(vowels.join(''), 'aeiou');\n});\nbeforeScenario(function () {\n    assert.equal(vowels[0], 'a');\n}, { tags: ['single word'] });"
        }]
    }
  }
}